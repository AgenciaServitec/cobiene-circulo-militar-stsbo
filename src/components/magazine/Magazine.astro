---
interface Props {
  title: string;
  images: Array<{
    url: string;
    title?: string;
    alt?: string;
    orientation?: "portrait" | "landscape";
  }>;
}

const { title, images } = Astro.props;
---

<section class="relative w-full max-w-7xl mx-auto overflow-hidden bg-neutral-100 py-12 pt-20">
  <div class="text-center mb-8 px-4">
    <h2 class="text-4xl md:text-5xl font-bold uppercase text-neutral-800 mb-2">{title}</h2>
    <div class="h-[2px] w-32 bg-neutral-400 mx-auto"></div>
  </div>

  <div class="relative h-[80vh] md:min-h-[90vh]">
    <div class="absolute inset-0 bg-gradient-to-b from-black/20 to-transparent z-10"></div>

    {
      images.map((image, index) => (
        <article
          class={`
          carousel-item absolute inset-0 w-full h-full transition-all duration-1000 ease-in-out
          opacity-0 scale-105 overflow-hidden shadow-xl left-1/2 -translate-x-1/2
          ${image.orientation === "portrait" ? "aspect-[3/4]" : "aspect-[16/9]"}
        `}
        >
          <div class="w-full h-full flex items-center justify-center">
            <img
              src={image.url}
              alt={image.alt || image.title}
              class="w-full h-full object-contain"
              loading="lazy"
            />
          </div>

          <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 p-6 text-white">
            {image.alt && <p class="text-sm opacity-90">{image.alt}</p>}
          </div>
        </article>
      ))
    }

    <div class="absolute bottom-8 left-1/2 -translate-x-1/2 flex gap-2 z-20">
      {
        images.map((_, index) => (
          <button
            class="indicator w-3 h-3 rounded-full bg-white/30 transition-all duration-300 hover:bg-white/60"
            data-index={index}
          />
        ))
      }
    </div>

    <button
      id="prev"
      class="absolute left-4 top-1/2 -translate-y-1/2 bg-white/30 p-3 rounded-full text-neutral-800 z-20 hover:bg-white/50 backdrop-blur-sm"
    >
      ❮
    </button>
    <button
      id="next"
      class="absolute right-4 top-1/2 -translate-y-1/2 bg-white/30 p-3 rounded-full text-neutral-800 z-20 hover:bg-white/50 backdrop-blur-sm"
    >
      ❯
    </button>
  </div>
</section>

<style>
  .carousel-item {
    transform-origin: center center;
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    transition:
      opacity 1s cubic-bezier(0.4, 0, 0.2, 1),
      transform 1.2s cubic-bezier(0.4, 0, 0.2, 1),
      clip-path 1s ease;
    width: 100%;
  }

  .carousel-item.opacity-100 {
    opacity: 1;
    transform: scale(1) translateX(-50%);
    clip-path: polygon(2% 2%, 98% 2%, 98% 98%, 2% 98%);
    z-index: 2;
  }

  .carousel-item:not(.opacity-100) {
    opacity: 0;
    transform: scale(0.95) translateX(-50%);
    z-index: 1;
  }

  @media (min-width: 768px) {
    .carousel-item {
      width: 40rem;
      height: 100vh;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const items = document.querySelectorAll(".carousel-item");
    const indicators = document.querySelectorAll(".indicator");
    let currentIndex = 0;
    let interval;

    const showItem = (index) => {
      items.forEach((item, i) => {
        item.classList.toggle("opacity-100", i === index);
        item.classList.toggle("scale-100", i === index);
      });

      indicators.forEach((dot, i) => {
        dot.classList.toggle("bg-white/90", i === index);
        dot.classList.toggle("w-6", i === index);
        dot.classList.toggle("bg-white/30", i !== index);
      });

      currentIndex = index;
    };

    document.getElementById("prev").addEventListener("click", () => {
      clearInterval(interval);
      showItem((currentIndex - 1 + items.length) % items.length);
    });

    document.getElementById("next").addEventListener("click", () => {
      clearInterval(interval);
      showItem((currentIndex + 1) % items.length);
    });

    indicators.forEach((dot) => {
      dot.addEventListener("click", () => {
        clearInterval(interval);
        showItem(parseInt(dot.dataset.index));
      });
    });

    showItem(0);
  });
</script>
